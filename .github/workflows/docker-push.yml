name: docker-push

on:
  # this allows us to run the workflow manually from withinside GitHub actions rather than automatically  on push.
  workflow_dispatch: 
  #this allows us to run the workflow automatically when we do push our code up to github.
  push:
    branches:
      - 'main'
env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
jobs:
# we've got a job called Docker and we can have multiple jobs inside here that will run in parallel if we have more than one. 
  docker:
    runs-on: ubuntu-latest
    steps:
    # we don't need QEMU as we only run a single platform.
      # -
      #   name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          # our docker file is inside the API folder and we need to tell GitHub that's the folder it needs to use to find the docker file.
          context: "{{defaultContext}}:API"
          push: true
          # docker username
          tags: aaronzhao1229/jewellery:latest
  deploy:
    needs: docker # We do want this run after the docker action creates a new image. If we don't use this, the docker and deploy will run on paralel.
    name: Deploy app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 #checkout repository
      - uses: superfly/flyctl-actions/setup-flyctl@master #use an action provided by fly
      - run: flyctl deploy --remote-only
        